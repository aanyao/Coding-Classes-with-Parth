Variable
My_dog  	#Stores value
A
B
#Variables make it easy to call data again and again at multiple places 


Dynamic Typing

My_dog = 2
My_dog = [“Sammy”, “Frankie”]

Value of My_dog can be changed in python unlike C++

Data Types

Integer
1,2,3, etc are integer
A = 1
B = 2
A + B = 3
A*B = 2
A - B = -1
A/B = 0.5 

Float
1.5, 3.52, etc are float values i.e. value with decimals

String
Within single or double quotes
‘Sammy’
“Hello” 

A = ‘Sammy’  #Stores value of string 

Indexing of String

A[0] = ‘S’       #Returns first character of string 
A[1] = ‘a’       #Returns second character
A[-1] = ‘y’      #Returns last character
A[-2] = ‘m’	#Returns second last character

String Slicing

A[1:3] = ‘am’  #Starts from second character and counts up to third character
A[1:] = ‘ammy’ #Starts from second all way to last
A[::2] = ‘Smy’  #Jumps two characters
A[::-1] = 'ymmaS' #Reverses string

Concatenation
B = ‘Hello’
A + B = ‘SammyHello’
‘Python %s’ % ‘Rules!’
‘2’ + ‘3’ = 23

Methods
A = “My name is Parth”
A.split() = [“My”, “name”, “is”, “Parth”]
A.split(‘a’) = [“My n”, “me is P”, “rth”]
print(‘My name is {}’.format(‘Parth’)) 
print(‘My name is {} {}’.format(‘Parth’, ‘Loya’))

List
list1 = [1,2,3,4,5]
list.sort() # Sorts exisiting list
list.reverse() #Reverses the list
list[::-1] #Reverses the list
list1[1:] --->[2,3,4,5] # Indexing works in list also similar to the string data type
list1.append(6) --> [1,2,3,4,5,6] #Adds new element at the last 
list1.pop() --> [1,2,3,4] #Removes last element of the list
list1.pop(-1) ---> [2,3,4,5] #Removes first element

Which of this is a floating point number?
A) 3.2
B) 4
C) 500
D) 270000

Which of these will output 36?
A) 30+*6
B) 6^6
C)6**6
D)6*6
E)6+6+6+6+6

Mutation

str = "Hello"
str[0] = "R" ---> invalid command as string does not mutates
list = [1,2,3,4]
list[0] = 'a'
list = ['a',2,3,4] ---> list mutates


Dictionary
d = {'k1':'v1', 'k2':'v2'}
k1, k2 are keys
v1,v2 are values
(k1,v1), (k2,v2) are items
d.item() --> returns items 
d.keys() --> returns keys
d.values() --> returns values
d['k1'] = 'a' --> d becomes {'k1':'a','k2':'v2'} #Dictionary is mutable

Sets
set('Mississippi') ---> {'M','i','s','p'} #Sets contain unique values
a = set() # Creates a set 
a.add(1) ---> a = {1} #Adds one to set
a.add(2) ---> a = {1,2} #Adds two to set

Tuples
t = (1,2,3) #tuples have parenthesis around them
t.count('1') --> 1 # Counts how many times 1 is appearing
t.index('1') --> 1 # Index location of where 1 is appearing for the first time
